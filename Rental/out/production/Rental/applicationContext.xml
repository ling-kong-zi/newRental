<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
<context:property-placeholder location="classpath:jdbc.properties" />
	<!--使用dbcp来创建dataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<!-- 使用tomcat提供的连接池dataSource 性能更高-->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/> -->

	<!-- Hibernate SessionFactory 去掉p:mappingResources="petclinic.hbm.xml" -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- hibernate其他配置信息 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
		<!-- 加载映射文件Resource[] mappingLocations:1.必须添加classpath:2.可以使用通配符 -->
		<property name="mappingLocations" value="classpath:com\rental\entity\*.hbm.xml" />
	</bean>
	<bean id="baseDAO" class="com.rental.dao.BaseDAO">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="baseService" abstract="true">
		<property name="baseDAO" ref="baseDAO"></property>
	</bean>
	<bean id="userService" class="com.rental.service.impl.UserServiceImpl" parent="baseService"/>
	<bean id="customerService" class="com.rental.service.impl.CustomerServiceImpl" parent="baseService"/>
	<bean id="recordService" class="com.rental.service.impl.RecordServiceImpl" parent="baseService"/>
	<bean id="messageService" class="com.rental.service.impl.MessageServiceImpl" parent="baseService"/>
	<bean id="discountService" class="com.rental.service.impl.DiscountServiceImpl" parent="baseService"/>
	<bean id="rentalService" class="com.rental.service.impl.RentalServiceImpl" parent="baseService"/>
	
<!-- 	<bean id="customerService" class="com.rental.service.impl.CustomerServiceImpl" parent="baseService"/>
 -->	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 切入点 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.rental.service.*Service.*(..))" id="pointcutId" />
		<aop:advisor advice-ref="adviceId" pointcut-ref="pointcutId" />
	</aop:config>

	<!-- 事务属性管理 -->
	<tx:advice id="adviceId">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="find*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
</beans>